"""
Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на две равные части: в одной находятся элементы, которые не меньше
медианы, в другой – не больше медианы.
Задачу можно решить без сортировки исходного массива. Но если это слишком сложно, то используйте метод сортировки,
который не рассматривался на уроках
"""

import random


'''
Реализация quickselect
Он же "Линейный в среднем алгоритм для нахождения k-й порядковой статистики"

Описание алгоритма из Википедии:
Идея алгоритма заключается в том, что массив разбивается на две части относительно случайно (равновероятно) выбранного 
элемента — в одну часть попадают элементы, меньшие, чем выбранный, в другую — остальные (эта операция выполняется за 
 O(n), по её окончанию выбранный элемент находится в позиции j). 
Если в первой части оказалось ровно k-1 элементов (j=k), то выбранный элемент является искомым, если j>k, то алгоритм 
выполняется рекурсивно для первой части массива, иначе — для второй (в последнем случае для следующей итерации от k 
отнимается j). Рекурсивные вызовы приводят к экспоненциально уменьшающемуся с каждой итерацией размеру обрабатываемого 
массива, и по этой причине время выполнения алгоритма составляет O(n).
'''


def top_k(lst, k):
    print(lst, k)
    if len(lst) == 1:
        return lst[0]

    v = lst[random.randrange(len(lst))]
    print('v = ', v)

    smaller = [i for i in lst if i < v]
    bigger = [i for i in lst if i > v]
    middle = [i for i in lst if i == v]

    print(smaller, bigger, middle)

    if len(smaller) > k:
        return top_k(smaller, k)
    elif len(smaller) + len(middle) > k:
        return middle[0]
    else:
        return top_k(bigger, k - len(smaller) - len(middle))


def median(lst):
    if len(lst) % 2 == 1:
        return top_k(lst, len(lst) / 2)
    else:
        return 0.5 * (top_k(lst, len(lst) / 2 - 1) +
                      top_k(lst, len(lst) / 2))


m = int(input('Введите m для длины списка (2m + 1): '))
a = [random.randint(-100, 100) for i in range(2*m + 1)]
print("Исходный массив: ", a)
print("Медиана: ", median(a))
